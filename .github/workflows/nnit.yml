name: Build app and deploy to nnitpai

on:
  push:
    branches: [nnit]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

  build:
    # using Ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install sshpass
        run: sudo apt-get install sshpass
      - name: NPM Install
        run: npm install
      - name: NPM Install Angular
        run: npm install -g @angular/cli > /dev/null
      - name: NPM build Angular Production
        run: ng build --prod --aot=true --buildOptimizer=true
      - name: Delete Existing Files
        run: sudo sshpass -p ${{ secrets.SSH_PASS }} -v ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.HUAWEI_HOST }} 'rm -rf /sdc/www/www.nnitpai.com/*'

      - name: Compress and Copy New Files to server
        run: |
          cd dist/xinshi/
          tar -czvf ../../xinshi.tar.gz ./
          cd ..
          cd ..
          sudo sshpass -p ${{ secrets.SSH_PASS }} scp -v -o StrictHostKeyChecking=no -r xinshi.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.HUAWEI_HOST }}:/sdc/www/www.nnitpai.com/
      - name: Uncompress new Files
        run: sudo sshpass -p ${{ secrets.SSH_PASS }} -v ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.HUAWEI_HOST }} 'cd /sdc/www/www.nnitpai.com/ && tar -xzvf xinshi.tar.gz && rm xinshi.tar.gz'
